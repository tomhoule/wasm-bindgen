initSidebarItems({"fn":[["decode_uri","The `decodeURI()` function decodes a Uniform Resource Identifier (URI) previously created by `encodeURI` or by a similar routine."],["decode_uri_component","The decodeURIComponent() function decodes a Uniform Resource Identifier (URI) component previously created by encodeURIComponent or by a similar routine."],["encode_uri","The `encodeURI()` function encodes a Uniform Resource Identifier (URI) by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two \"surrogate\" characters)."],["encode_uri_component","The encodeURIComponent() function encodes a Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two \"surrogate\" characters)."],["escape","The escape() function computes a new string in which certain characters have been replaced by a hexadecimal escape sequence."],["eval","The `eval()` function evaluates JavaScript code represented as a string."],["is_finite","The global isFinite() function determines whether the passed value is a finite number. If  needed, the parameter is first converted to a number."],["parse_float","The parseFloat() function parses an argument and returns a floating point number, or NaN on error."],["parse_int","The `parseInt()` function parses a string argument and returns an integer of the specified radix (the base in mathematical numeral systems), or NaN on error."],["unescape","The unescape() function computes a new string in which hexadecimal escape sequences are replaced with the character that it represents. The escape sequences might be introduced by a function like escape. Usually, decodeURI or decodeURIComponent are preferred over unescape."]],"struct":[["Array",""],["ArrayBuffer",""],["Boolean",""],["DataView",""],["Date",""],["Error",""],["Float32Array",""],["Float64Array",""],["Function",""],["Generator",""],["Int16Array",""],["Int32Array",""],["Int8Array",""],["Intl",""],["Iterator","Any object that conforms to the JS iterator protocol. For example, something returned by `myArray[Symbol.iterator]()`."],["IteratorNext","The result of calling `next()` on a JS iterator."],["JsString",""],["Map",""],["Math",""],["Number",""],["Object",""],["Promise","The `Promise` object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value."],["Proxy",""],["Reflect",""],["RegExp",""],["Set",""],["Symbol",""],["Uint16Array",""],["Uint32Array",""],["Uint8Array",""],["Uint8ClampedArray",""],["WeakMap",""],["WeakSet",""],["WebAssembly",""]]});